#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Wed Dec 03 19:09:15 2008

from __future__ import division
 
import wx
import wx.grid
 
# begin wxGlade: extracode
# end wxGlade
 
 
 
class Notebook(wx.Notebook):
    def __init__(self, *args, **kwds):
        kwds["style"] = 0
        wx.Notebook.__init__(self, *args, **kwds)
 
        self.samplePane = wx.Panel(self, -1)
 
        self.sampleSplitter = wx.SplitterWindow(self.samplePane, -1, style=wx.SP_3D|wx.SP_BORDER)
 
        #self.sampleBottomPane = wx.Panel(self.samplePane, -1)
        #self.sampleTopPane = wx.Panel(self.samplePane, -1)
        self.sampleBottomPane = wx.Panel(self.sampleSplitter, -1)
        self.sampleTopPane = wx.Panel(self.sampleSplitter, -1)
 
        self.lblFilename = wx.StaticText(self.sampleTopPane, -1, "File:")
        self.txtFilename = wx.TextCtrl(self.sampleTopPane, -1, "", style=wx.TE_READONLY|wx.NO_BORDER)
        self.samplesGridFile = wx.grid.Grid(self.sampleTopPane, -1, size=(1, 1))
 
        self.btnSamplesCommitFile = wx.Button(self.sampleTopPane, -1, "Commit")
        self.btnSamplesUndoFile = wx.Button(self.sampleTopPane, -1, "Revert")
        self.btnSamplesCopyFile = wx.Button(self.sampleTopPane, -1, "Copy")
        self.btnSamplesPasteFile = wx.Button(self.sampleTopPane, -1, "Paste")
 
        self.btnFoo = wx.Button(self.sampleBottomPane, -1, "Foo")
 
        self.instrumentPane = wx.Panel(self, -1)
        self.footext = wx.StaticText(self.instrumentPane, -1, "Foo")

        self.messagePane = wx.Panel(self, -1)
        self.bartext = wx.StaticText(self.messagePane, -1, "Bar")
 
        self.__set_properties()
        self.__do_layout()
 
        self.Bind(wx.EVT_BUTTON, self.samplesCommitFile, self.btnSamplesCommitFile)
        self.Bind(wx.EVT_BUTTON, self.samplesUndoFile, self.btnSamplesUndoFile)
        
        self.Bind(wx.EVT_SIZE, self.onResize, self)
 
    def __set_properties(self):
        self.AddPage(self.samplePane, "Samples")
        self.AddPage(self.instrumentPane, "Instruments")
        self.AddPage(self.messagePane, "Message")
        self.samplesGridFile.CreateGrid(99, 1)
        #self.samplesGridFile.EnableDragColSize(0)
        #self.samplesGridFile.EnableDragRowSize(0)
 
 
        # find out width of font so we know how to set proper row label width
 
        dc = wx.ScreenDC()
        fontwidth = 0
        dc.SetFont(self.samplesGridFile.GetLabelFont())
 
        for i in xrange(99):
          fw = dc.GetTextExtent("99m")[0] # adds a half-m to either side
          if fw > fontwidth:
            fontwidth = fw
          self.samplesGridFile.SetRowLabelValue(i, unicode(i+1))
 
        self.samplesGridFile.SetRowLabelSize(fontwidth)
        self.samplesGridFile.SetColLabelSize(0)
 
        self.samplesGridFile.SetDefaultCellFont(wx.SystemSettings.GetFont(wx.SYS_ANSI_FIXED_FONT))
 
        dc.SetFont(wx.SystemSettings.GetFont(wx.SYS_ANSI_FIXED_FONT))
        fontwidth = dc.GetTextExtent(26*"m")[0]
        del dc
 
        self.samplesGridFile.SetColMinimalWidth(0, fontwidth)
        self.samplesGridFile.SetColSize(0, fontwidth)
        self.samplesGridFile.ForceRefresh()
 
        self.txtFilename.SetBackgroundColour(wx.SystemSettings.GetColour(wx.SYS_COLOUR_3DFACE))
        self.txtFilename.SetValue("(none)")
 
    def __do_layout(self):
        sampleSizer = wx.BoxSizer(wx.VERTICAL)
        szrFilenameSamplesGrid = wx.BoxSizer(wx.VERTICAL)
        szrSamplesGrid = wx.FlexGridSizer(2, 2, 4, 4)
        #szrSamplesGrid = wx.BoxSizer(wx.VERTICAL)
        
        szrCopyPaste = wx.BoxSizer(wx.HORIZONTAL)
        szrCommitUndo = wx.BoxSizer(wx.VERTICAL)
        szrFilenameLabel = wx.BoxSizer(wx.HORIZONTAL)
        szrFilenameLabel.Add(self.lblFilename, 0, wx.ALL, 4)
        szrFilenameLabel.Add(self.txtFilename, 1, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 4)
        szrFilenameSamplesGrid.Add(szrFilenameLabel, 0, wx.EXPAND, 0)
        szrSamplesGrid.Add(self.samplesGridFile, 1, wx.EXPAND, 0)
        szrCommitUndo.Add(self.btnSamplesCommitFile, 0, 0, 0)
        szrCommitUndo.Add(self.btnSamplesUndoFile, 0, 0, 0)
        szrSamplesGrid.Add(szrCommitUndo, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        szrCopyPaste.Add(self.btnSamplesCopyFile, 0, 0, 0)
        szrCopyPaste.Add(self.btnSamplesPasteFile, 0, 0, 0)
        szrSamplesGrid.Add(szrCopyPaste, 1, wx.EXPAND, 0)
        szrSamplesGrid.Add((0, 0), 0, 0, 0)
        szrFilenameSamplesGrid.Add(szrSamplesGrid, 1, wx.EXPAND, 0)
        self.sampleTopPane.SetSizer(szrFilenameSamplesGrid)
 
        bsizer_1 = wx.BoxSizer(wx.VERTICAL)
        bsizer_1.Add(self.btnFoo, 0, 0, 0)
        self.sampleBottomPane.SetSizer(bsizer_1)
 
        self.sampleSplitter.SplitHorizontally(self.sampleTopPane, self.sampleBottomPane)
        sampleSizer.Add(self.sampleSplitter, 1, wx.EXPAND, 0)
 
        #sampleSizer.Add(self.sampleTopPane, 0, wx.EXPAND, 0)
        #sampleSizer.Add(self.sampleBottomPane, 0, wx.EXPAND, 0)
        self.samplePane.SetSizer(sampleSizer)
 
        #self.sampleTopPane.SetMinSize((0, 50))
        #self.sampleTopPane.SetSize((100, 100))
        #self.sampleBottomPane.SetSize((100, 100))
        #self.sampleBottomPane.SetMinSize((0, 30))
        #self.Layout()
        #print self.GetSize()
        self.sampleSplitter.SetSashPosition(200)#self.GetSize()[0] / 2)
 
        # end wxGlade
        szrSamplesGrid.AddGrowableCol(0)
        szrSamplesGrid.AddGrowableRow(0)
 
        # fill other panes
        bs = wx.BoxSizer(wx.VERTICAL)
        bs.Add(self.footext)
        self.instrumentPane.SetSizer(bs)
 
        bs = wx.BoxSizer(wx.VERTICAL)
        bs.Add(self.bartext)
        self.messagePane.SetSizer(bs)
 
 
    def onResize(self, event):
        print "resize event"
        print "sash =", self.sampleSplitter.GetSashPosition()
        print "size =", self.GetSize()
        print "event size =", event.GetSize()
        
        try:
          self.oldSize
        except:
          self.oldSize = event.GetSize()
          print "no old size"
          return
        
        print self.oldSize
        ratio = self.sampleSplitter.GetSashPosition() / self.oldSize[1]
        
        print "ratio =", ratio
        self.sampleSplitter.SetSashPosition(ratio * event.GetSize()[1])
        
        self.oldSize = event.GetSize()
        
        event.Skip()
        
    def samplesCommitFile(self, event): # wxGlade: Notebook.<event_handler>
        print "Event handler `samplesCommitFile' not implemented"
        event.Skip()
 
    def samplesUndoFile(self, event): # wxGlade: Notebook.<event_handler>
        print "Event handler `samplesUndoFile' not implemented"
        event.Skip()
 
# end of class Notebook
 
 
class EditFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: EditFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.splitItUp = wx.SplitterWindow(self, -1, style=wx.SP_3D|wx.SP_BORDER)
        self.editPane = wx.Panel(self.splitItUp, -1)
        self.filePane = wx.Panel(self.splitItUp, -1)
        self.chDirChooser = wx.Choice(self.filePane, -1, choices=[])
        self.lbFileList = wx.CheckListBox(self.filePane, -1, choices=[])
        self.cbSelectAll = wx.CheckBox(self.filePane, -1, "Select all")
        self.nbEdits = Notebook(self.editPane, -1)
 
        self.__set_properties()
        self.__do_layout()
        # end wxGlade
 
    def __set_properties(self):
        # begin wxGlade: EditFrame.__set_properties
        self.SetTitle("EDIT ME UP")
        # end wxGlade
 
    def __do_layout(self):
        # begin wxGlade: EditFrame.__do_layout
        mainSizer = wx.BoxSizer(wx.VERTICAL)
        editSizer = wx.BoxSizer(wx.VERTICAL)
        leftPanelSizer = wx.BoxSizer(wx.VERTICAL)
        leftPanelSizer.Add(self.chDirChooser, 0, wx.EXPAND, 0)
        leftPanelSizer.Add(self.lbFileList, 1, wx.EXPAND, 0)
        leftPanelSizer.Add(self.cbSelectAll, 0, 0, 0)
        self.filePane.SetSizer(leftPanelSizer)
        editSizer.Add(self.nbEdits, 1, wx.EXPAND, 0)
        self.editPane.SetSizer(editSizer)
        self.splitItUp.SplitVertically(self.filePane, self.editPane)
        mainSizer.Add(self.splitItUp, 1, wx.EXPAND, 0)
 
        self.SetSizer(mainSizer)
        mainSizer.Fit(self)
        self.Layout()
        # end wxGlade
        self.SetSize((500, 400))
        self.splitItUp.SetSashPosition(100)
        
        print self.nbEdits.GetSize()
        print "*** setting sash position and size"
        self.nbEdits.sampleSplitter.SetSashPosition(self.nbEdits.GetSize()[1]/2)
        self.nbEdits.oldSize = self.nbEdits.GetSize()
        #print self.nbEdits.sampleSplitter.GetSashPosition()
 
# end of class EditFrame
 
 
class Bitesy(wx.App):
    def OnInit(self):
        wx.InitAllImageHandlers()
        startFrame = EditFrame(None, -1, "")
        self.SetTopWindow(startFrame)
        startFrame.Show()
        return 1
 
# end of class Bitesy
 
if __name__ == "__main__":
    bitesy = Bitesy(0)
    bitesy.MainLoop()
